{"version":3,"sources":["webpack:///src/app/_pipes/safe.pipe.ts"],"names":["SafePipe","sanitizer","value","type","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","Error","name","SafePipeModule","exports","declarations","imports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaA,Q;AAEZ,0BAAsBC,SAAtB,EAA+C;AAAA;;AAAzB,eAAAA,SAAA,GAAAA,SAAA;AAA4B;;;;oCAEjCC,K,EAAYC,I,EAAY;AACxC,oBAAQA,IAAR;AACC,mBAAK,MAAL;AAAa,uBAAO,KAAKF,SAAL,CAAeG,uBAAf,CAAuCF,KAAvC,CAAP;;AACb,mBAAK,OAAL;AAAc,uBAAO,KAAKD,SAAL,CAAeI,wBAAf,CAAwCH,KAAxC,CAAP;;AACd,mBAAK,QAAL;AAAe,uBAAO,KAAKD,SAAL,CAAeK,yBAAf,CAAyCJ,KAAzC,CAAP;;AACf,mBAAK,KAAL;AAAY,uBAAO,KAAKD,SAAL,CAAeM,sBAAf,CAAsCL,KAAtC,CAAP;;AACZ,mBAAK,aAAL;AAAoB,uBAAO,KAAKD,SAAL,CAAeO,8BAAf,CAA8CN,KAA9C,CAAP;;AACpB;AAAS,sBAAM,IAAIO,KAAJ,wCAA0CN,IAA1C,EAAN;AANV;AAQA;;;;;;;yBAbWH,Q,EAAQ,uI;AAAA,O;;;;cAARA,Q;AAAQ;;;;;wEAARA,Q,EAAQ;gBAHpB,kDAGoB;iBAHf;AACLU,gBAAI,EAAE;AADD,W;AAGe,U;;;;;;;UAiBRC,c;;;;;cAAAA;;;;2BAAAA,c;AAAc,S;AAAA,kBAFoB,CAAC,4DAAD,CAEpB;;;;4HAAdA,c,EAAc;AAAA,yBAjBdX,QAiBc;AAjBN,oBAe2B,4DAf3B,CAiBM;AAFoCY,iBAAO,EAAE,CAf3DZ,QAe2D;AAE7C,S;AAjBN,O;;;;;wEAiBRW,c,EAAc;gBAF1B,sDAE0B;iBAFjB;AAAEE,wBAAY,EAAE,CAACb,QAAD,CAAhB;AAA4Bc,mBAAO,EAAE,CAAC,4DAAD,CAArC;AAAqDF,mBAAO,EAAE,CAACZ,QAAD;AAA9D,W;AAEiB,U","file":"common-es5.js","sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { NgModule, Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n\tname: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n\r\n\tconstructor(protected sanitizer: DomSanitizer) { }\r\n\r\n\tpublic transform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\r\n\t\tswitch (type) {\r\n\t\t\tcase 'html': return this.sanitizer.bypassSecurityTrustHtml(value);\r\n\t\t\tcase 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\r\n\t\t\tcase 'script': return this.sanitizer.bypassSecurityTrustScript(value);\r\n\t\t\tcase 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\r\n\t\t\tcase 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n\t\t\tdefault: throw new Error(`Invalid safe type specified: ${type}`);\r\n\t\t}\r\n\t}\r\n}\r\n@NgModule({ declarations: [SafePipe], imports: [CommonModule], exports: [SafePipe] })\r\n\r\nexport class SafePipeModule { }"]}